{"ast":null,"code":"import _classCallCheck from \"/Users/ryanlecoutre/Desktop/Intermediate JavaScript/React/2. React Apps/react-page-1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ryanlecoutre/Desktop/Intermediate JavaScript/React/2. React Apps/react-page-1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ryanlecoutre/Desktop/Intermediate JavaScript/React/2. React Apps/react-page-1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ryanlecoutre/Desktop/Intermediate JavaScript/React/2. React Apps/react-page-1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ryanlecoutre/Desktop/Intermediate JavaScript/React/2. React Apps/react-page-1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ryanlecoutre/Desktop/Intermediate JavaScript/React/2. React Apps/react-page-1/src/App.js\";\nimport React, { Component } from 'react';\nimport uuid from 'uuid';\nimport Projects from './Components/Projects';\nimport AddProject from './Components/AddProject';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      projects: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        projects: [{\n          id: uuid.v4(),\n          title: 'Example Website',\n          category: 'Examples'\n        }, {\n          id: uuid.v4(),\n          title: 'Example App',\n          category: 'Example Ting'\n        }, {\n          id: uuid.v4(),\n          title: 'Example Game',\n          category: 'Examples Innit'\n        }]\n      });\n      this.getToDos();\n    }\n  }, {\n    key: \"getToDos\",\n    value: function getToDos() {}\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getToDos();\n    }\n  }, {\n    key: \"handleAddProject\",\n    value: function handleAddProject(project) {\n      // Set up a variable containing all the projects in the current state:\n      var projects = this.state.projects; // Then add the new project (that we passed in as a parameter for this function) to the variable list:\n\n      projects.push(project); // Then reset the state in order to display the new updated list, because states are IMMUTABLE (have to be deleted and then re-created in order to be updated):\n\n      this.setState({\n        projects: projects\n      });\n    }\n  }, {\n    key: \"handleDeleteProject\",\n    value: function handleDeleteProject(id) {\n      var projects = this.state.projects; // Checks which project's id matches the id of the delete button clicked, then adds this project to the 'index' variable:\n\n      var index = projects.findIndex(function (x) {\n        return x.id === id;\n      }); // Then we delete this 'index' variable (that contains the project that we want to delete) from the project list:\n\n      projects.splice(index, 1); // Then reset the state to display the new list:\n\n      this.setState({\n        projects: projects\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(AddProject, {\n        addProject: this.handleAddProject.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Projects, {\n        projects: this.state.projects,\n        onDelete: this.handleDeleteProject.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/ryanlecoutre/Desktop/Intermediate JavaScript/React/2. React Apps/react-page-1/src/App.js"],"names":["React","Component","uuid","Projects","AddProject","App","state","projects","setState","id","v4","title","category","getToDos","project","push","index","findIndex","x","splice","handleAddProject","bind","handleDeleteProject"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;IAEMC,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAFY;AAKb;;;;yCAEmB;AAClB,WAAKC,QAAL,CAAc;AAACD,QAAAA,QAAQ,EAAE,CACvB;AACEE,UAAAA,EAAE,EAAEP,IAAI,CAACQ,EAAL,EADN;AAEEC,UAAAA,KAAK,EAAE,iBAFT;AAGEC,UAAAA,QAAQ,EAAE;AAHZ,SADuB,EAMvB;AACEH,UAAAA,EAAE,EAAEP,IAAI,CAACQ,EAAL,EADN;AAEEC,UAAAA,KAAK,EAAE,aAFT;AAGEC,UAAAA,QAAQ,EAAE;AAHZ,SANuB,EAWvB;AACEH,UAAAA,EAAE,EAAEP,IAAI,CAACQ,EAAL,EADN;AAEEC,UAAAA,KAAK,EAAE,cAFT;AAGEC,UAAAA,QAAQ,EAAE;AAHZ,SAXuB;AAAX,OAAd;AAiBA,WAAKC,QAAL;AACD;;;+BAES,CAET;;;wCAEkB;AACjB,WAAKA,QAAL;AACD;;;qCAEgBC,O,EAAQ;AACvB;AACA,UAAIP,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA1B,CAFuB,CAGvB;;AACAA,MAAAA,QAAQ,CAACQ,IAAT,CAAcD,OAAd,EAJuB,CAKvB;;AACA,WAAKN,QAAL,CAAc;AAACD,QAAAA,QAAQ,EAACA;AAAV,OAAd;AACD;;;wCAEmBE,E,EAAG;AACrB,UAAIF,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA1B,CADqB,CAErB;;AACA,UAAIS,KAAK,GAAGT,QAAQ,CAACU,SAAT,CAAmB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACT,EAAF,KAASA,EAAb;AAAA,OAApB,CAAZ,CAHqB,CAIrB;;AACAF,MAAAA,QAAQ,CAACY,MAAT,CAAgBH,KAAhB,EAAuB,CAAvB,EALqB,CAMrB;;AACA,WAAKR,QAAL,CAAc;AAACD,QAAAA,QAAQ,EAACA;AAAV,OAAd;AACD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAI,KAAKa,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAI,KAAKf,KAAL,CAAWC,QAAjC;AAA2C,QAAA,QAAQ,EAAI,KAAKe,mBAAL,CAAyBD,IAAzB,CAA8B,IAA9B,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EA/DepB,S;;AAkElB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport uuid from 'uuid';\nimport Projects from './Components/Projects';\nimport AddProject from './Components/AddProject';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projects: []\n    }\n  }\n\n  componentWillMount(){\n    this.setState({projects: [\n      {\n        id: uuid.v4(),\n        title: 'Example Website',\n        category: 'Examples'\n      },\n      {\n        id: uuid.v4(),\n        title: 'Example App',\n        category: 'Example Ting'\n      },\n      {\n        id: uuid.v4(),\n        title: 'Example Game',\n        category: 'Examples Innit'\n      }\n    ]});\n    this.getToDos();\n  }\n\n  getToDos(){\n    \n  }\n\n  componentDidMount(){\n    this.getToDos();\n  }\n\n  handleAddProject(project){\n    // Set up a variable containing all the projects in the current state:\n    let projects = this.state.projects;\n    // Then add the new project (that we passed in as a parameter for this function) to the variable list:\n    projects.push(project);\n    // Then reset the state in order to display the new updated list, because states are IMMUTABLE (have to be deleted and then re-created in order to be updated):\n    this.setState({projects:projects})\n  }\n\n  handleDeleteProject(id){\n    let projects = this.state.projects;\n    // Checks which project's id matches the id of the delete button clicked, then adds this project to the 'index' variable:\n    let index = projects.findIndex(x => x.id === id);\n    // Then we delete this 'index' variable (that contains the project that we want to delete) from the project list:\n    projects.splice(index, 1);\n    // Then reset the state to display the new list:\n    this.setState({projects:projects})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <AddProject addProject = {this.handleAddProject.bind(this)}/>\n        <Projects projects = {this.state.projects} onDelete = {this.handleDeleteProject.bind(this)}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}